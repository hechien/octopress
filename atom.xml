<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[赫謙小便籤]]></title>
  <link href="http://hechien.github.com/octopress/atom.xml" rel="self"/>
  <link href="http://hechien.github.com/octopress/"/>
  <updated>2012-05-25T10:32:39+08:00</updated>
  <id>http://hechien.github.com/octopress/</id>
  <author>
    <name><![CDATA[赫謙]]></name>
    <email><![CDATA[hechien@me.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTML5 Video 標籤初探]]></title>
    <link href="http://hechien.github.com/octopress/blog/html5-video-transform-first-view/"/>
    <updated>2012-05-25T10:29:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/html5-video-transform-first-view</id>
    <content type="html"><![CDATA[<div><script src='https://gist.github.com/2785414.js?file='></script>
<noscript><pre><code>&lt;!doctype html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;script src=&quot;http://code.jquery.com/jquery-1.7.2.min.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;style&gt;
      video{
        /*-webkit-transform: rotate3d(3, 4, 3, 45deg) sca;*/
        /*-webkit-transform: rotate3d(40, 1, 30, 45deg);*/
        margin: auto auto;
        margin-top:200px;
      }
    &lt;/style&gt;
    &lt;script&gt;
      // References:
      //   http://www.eleqtriq.com/2010/05/understanding-css-3d-transforms/
      //   http://www.w3schools.com/css3/css3_3dtransforms.asp
      $(function(){
        var index = 0;
        setInterval(function(){
          if((index === 9) || (index === 27)) index+=1;
          if (index === 37) index = 1;
          $('video').css({
            '-webkit-transform': 'rotateX('+(index*10)+'deg) rotateY('+(index*10)+'deg) rotateZ('+(index*10)+'deg)'
          });
          index++;
        }, 100);
      });
    &lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;video class=&quot;persistentNativePlayer nativeEmbedPlayerPid&quot; poster=&quot;http://cdnbakmi.kaltura.com/p/243342/sp/24334200/thumbnail/entry_id/0_ntovmku5/version/100004/height/480&quot; id=&quot;pid_kaltura-video&quot; style=&quot;display: block; width: 480px; height: 271px; top: 0px; &quot; kwidgetid=&quot;_243342&quot; kuiconfid=&quot;5349042&quot; kentryid=&quot;0_ntovmku5&quot; src=&quot;http://cdnapi.kaltura.com/p/243342/sp/24334200/playManifest/entryId/0_ntovmku5/flavorIds/0_nvp2quz3,0_o0bikcqg/format/applehttp/protocol/http/a.m3u8?ks=NmRmYmMxOWIzNWUzMWE3Mzg1MmU5MzhjY2YzNjg2ZmQ3OGM2YTNkYXwyNDMzNDI7MjQzMzQyOzEzMzc5OTYwMTQ7MDsxMzM3OTA5NjE0LjIxNjY7MDt2aWV3Oio7Ow==&amp;amp;referrer=aHR0cDovL2h0bWw1dmlkZW8ub3JnLw==&quot; autoplay=&quot;autoplay&quot; loop=&quot;-1&quot;&gt;&lt;/video&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre></noscript></div>


<p>先這樣吧XDDD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 與 Subdomain 的初次邂逅]]></title>
    <link href="http://hechien.github.com/octopress/blog/rails-3-yu-subdomain-de-chu-ci-xie-hou/"/>
    <updated>2012-05-21T11:58:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/rails-3-yu-subdomain-de-chu-ci-xie-hou</id>
    <content type="html"><![CDATA[<p>終於成功解決掉這個問題了 &#8230; 在進行這個操作之前請先到 <code>/etc/hosts</code> 內手動新增對應：</p>

<p><code>127.0.0.1 site1.product.local site3.product.local</code></p>

<p>請務必寫上這樣，我一開始寫成 <code>site1.local</code> 時會一直發生找不到根目錄的問題，所以必須這樣寫。</p>

<!-- more -->


<p>然後要做的就是在 <code>config/rotues.rb</code> 內修改一下，加上 <code>constraints({subdomain: "site1"}) do ... end</code> 這樣，假設：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">constraints</span><span class="p">({</span><span class="n">subdomain</span><span class="p">:</span> <span class="s2">&quot;site1&quot;</span><span class="p">})</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">constraints</span><span class="p">({</span><span class="n">subdomain</span><span class="p">:</span> <span class="s2">&quot;site2&quot;</span><span class="p">})</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:users</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>即可</p>

<p>但是必須注意的是，如果你原本是使用Namespace的話，就必須加上 <code>scope module: :xxx</code> 這個Block，如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">constraints</span><span class="p">({</span><span class="n">subdomain</span><span class="p">:</span> <span class="s2">&quot;site1&quot;</span><span class="p">})</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">scope</span> <span class="n">module</span><span class="p">:</span> <span class="s2">&quot;site1&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">resources</span> <span class="ss">:users</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">constraints</span><span class="p">({</span><span class="n">subdomain</span><span class="p">:</span> <span class="s2">&quot;site2&quot;</span><span class="p">})</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">scope</span> <span class="n">module</span><span class="p">:</span> <span class="s2">&quot;site2&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">resources</span> <span class="ss">:users</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如此一來，原本是 <code>/site1/users</code> 會變成 <code>site1.product.local/users</code> 並且指定到 <code>app/controllers/site1/users_controller.rb</code> 了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[為什麼我用Mac？]]></title>
    <link href="http://hechien.github.com/octopress/blog/why-i-use-the-mac/"/>
    <updated>2012-05-19T15:42:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/why-i-use-the-mac</id>
    <content type="html"><![CDATA[<p>這是很有趣的問題，不是嗎？</p>

<p>我是一名軟體工程師、網站開發人員、網頁設計師、學生、兒子 … etc (但其中並沒有包含<strong>男朋友</strong>這個身分&#8230;)，總之，我有著很多的身分，但我為什麼不選擇大多數人用的PC，裡面裝著Windows或Linux？</p>

<!-- more -->


<p>國小升上三年級的暑假吧，學校開了電腦課，那個暑假我拿到一本DOS指令的書，那年可能是1997年。那是屏東縣潮州鎮的一所學校，我不知道為什麼，Windows 95已經在1995年發售的情況下，學校還在用DOS，但它真的奠定了我的基礎：「注音的第一聲要按空白鍵」。</p>

<blockquote><p>我的人生是從微軟開始的，從它的MS-DOS、Windows 95、Windows 98、Windows ME、Windows 2000、Windows XP、Windows 2003 Server .net、Windows Vista、Windows 7我全部都接觸過，其中Windows 98、Windows XP我玩得最盛。</p></blockquote>

<p>四年級時學校終於開始上電腦課(等我六年級的時候，五年級也開始有電腦課了)，那個時候學校電腦也還是MS-DOS，要把磁片放進去然後輸入指令，叫出小作家或者其他遊戲來玩，在那個時候對我來說是很神奇的事情(現在依舊覺得神奇，為什麼還不用Windows 95)。猶記得每次開機後畫面上都會出現 <code>C:\&gt;</code>，老師說：「這個代表已經成功開機了」，然而有一天出現了<code>E:\&gt;</code>還<code>F:\&gt;</code>，老師這時表示：「我們學校現在已經牽了網路」，但其實我在那個時候還不懂網路到底是什麼。</p>

<p>1998年吧，高雄NOVA(現在倒了)似乎有辦了活動，而那次我媽有帶我過去走走，那似乎是我第一次走進所謂的資訊商場，裡面有很多人在逛在看，擺著一堆電腦螢幕、主機 … etc，剛好我站在INTEL的宣傳活動前面，PG(Promoter Girl)拿著麥克風喊說：「舉手搶答～ 請問現在最快的CPU是什麼？」(其實問題是不是這樣我忘記了，那也不是很重要)，在那當下一堆人舉手，結果那個<strong>姐姐</strong>(拜託，我當時才小四<del>，好險小三才當過一年而已</del>)直接把麥克風督到我嘴邊(請不要亂幻想)要我說答案，我只好很害羞的說：「Intel」 …. 嗯，當時是因為不知道Intel是什麼而害羞，至於現在&#8230;.</p>

<p>是的，最後我拿到獎品 => Intel 的撲克牌一副 <del>(但我比較想要那個PG的電話)</del></p>

<p>而一位參加者大哥則是把他手上的袋子送給我，裡面好像是一些教學光碟、雜誌之類的，這讓我知道了什麼叫做純愛手札(誤)。</p>

<p>準備升上國一了，跟媽媽去大亞電腦那邊問一些電腦的事情，最後確認學校會上電腦課(因為有電腦教室)所以才點頭買下我第一台電腦，那台是 Intel Pentium III 733 Mhz，剛買進來的時候只有64 MB RAM，40G的硬碟，後來進去國一的時候我用Front Page做網頁，當時覺得Dreamweaver很難用、覺得Flash好難 … 之後玩Access覺得資料庫很枯燥乏味。我國二學Visual Basic，寫了不少程式來玩，我在國中的時候完全就是微軟的支持者，Macintosh是只存在於我電腦字典裡面的一個名詞而已，而Apple頂多出現在台視新聞後面那個五顏六色的蘋果Logo，除此之外我根本不知道他們在幹什麼。</p>

<p>國三，我接觸到了Linux。我在順發買了一本書，那本裡面送的是Red Hat Linux 7.3 + CLE 1.0，我照著書把系統安裝起來、中文化後，發現到網路不能用，我只好想辦法去燦坤另外買一張NIC來用，自己根據驅動光碟內的純文字說明檔來自己編譯Driver。</p>

<blockquote><p>那個時候整個文件都英文，在沒有網路的情況之下我只能夠一邊看單字一面猜一面拿字典來翻，雖然很苦，但我發現這讓我的英文閱讀能力好了不少</p>

<p>那時候的指令大概就是 <code>cd</code> 到Driver目錄，然後下 <code>./configure; make; make install</code> 而已，但沒想到那張卡是當年出了名的惡魔卡 …. D-Link的!!!</p></blockquote>

<p>後來到了高中，我用Linux學著架站，也同時學著用PWS(這個一定沒多少人用過)、IIS來架站，並且學ASP(王國榮的書都很不錯，強烈推薦)來撰寫網頁程式，在那個時候我也還是不知道什麼是蘋果、什麼是Mac。</p>

<p>高中後來讀不下去轉去五專，我在五專自修PHP，而且在那個時候我玩Linux玩得最盛，總在推廣Linux的好處，也讓我媽的電腦從Windows變成Linux，用起來也真的沒問題 … 我參加過Ubuntu Linux Install Festval、也曾經很不成熟的想要成立PTLug，但在那當時Linux是我的全部、Open Source是我的最愛，讓大家都用Ubuntu Linux是我的夢想我的目標，十分厭惡Windows那種所謂只愛錢的公司 … 直到2006年。</p>

<p>2006年，我開始正式接觸到<code>Ruby on Rails</code>，他們的screencast是用Textmate開發，用那個軟體開發起來真的是神速啊，之後我就對這個介面留上了心，也開始在Linux上裝上類似Mac的介面。</p>

<blockquote><p>當時的Linux還有一個很炫的特效，那個特效是可以用立體的方式切換桌面等，我已經忘記那個名字了，那段時間我真的很著迷這種沒有意義的東西。</p></blockquote>

<p>之後，我發現到Linux還是沒辦法完全模擬出我真正想要的感覺，在2007年左右我得到一份工作時我便跟該公司要求一台Mac，我用那台Mac開發網站、做作業報告 … etc。在那半年的時間裡面(我只待了半年，因為壓力實在太大，而且又重考統測)我只感覺到Mac真的只是比較好用，但其實也還好，所以把電腦退回公司後我繼續用Linux當主力系統，後來我發現我完全沒辦法習慣Linux的介面以及操作方式，後來就另外貸款買了一台Mac，那年是2008年，我現在正用這台Mac打這篇文章。</p>

<blockquote><p>Ubuntu Linux 曾經發生過一件事情讓我很不能夠接受，也成為我當時的疙瘩。</p>

<p>有一次我在更新系統之後發現我不能執行gdm，整個X Server啟動不起來，後來用純文字模式上IRC問別人到底怎麼回事，用w3m搜尋才知道原來這次版本中有一個開發者不小心搞爛了顯示的Driver才發生這種事情，隨後就打了Patch重新送上線，更新過後才正常…</p>

<p>這種事情其實真的很嚴重，如果只是單純使用純文字模式的話倒是沒啥影響，但是對於使用者來說這個可真的是罪該萬死的，也因此Linux就失去了我的信任。不是因為Linux不好，而是因為Linux在當時還是搞不懂使用者要的是什麼。</p></blockquote>

<p>2009年我到台南工作，因為工作是要寫iOS的App所以也一定只能用Mac，但是在這之前我還是不知道Mac到底好在哪裡，我一樣不喜歡用iTunes、覺得iPhoto麻煩 … 可是在開發軟體的過程當中我慢慢的發現到一個重點：我開始看其他的軟體介面不爽了</p>

<p>我在2005年的時候曾經寫了一個程式叫做「Ruby執行檔製作精靈」(這支程式後來還被Toget選上精選軟體)，那個可以讓Windows上寫的Ruby Script轉成執行檔，但是操作的介面非常複雜，可是我在當時卻覺得它非常容易使用。有看到重點了嗎？對，我開始在思考使用者介面的事情，而且是不知不覺間開始有這種意識：「我怎麼做出了一個難用的垃圾出來？」。後來，我的朋友阿白(以前叫ZenixD)他也買了一台Mac，買了之後沒多久他告訴我一句話：「用了Mac之後我的靈感一直來」我才發現到，我之所以那段時間不想要再用Linux、Windows的原因很簡單，就是那真的太難用了！</p>

<p>開始真正理解到設計的重要之後，我一直在思考自己做的東西到底能不能夠更加精簡、更加好用，我開始知道什麼叫做使用者介面(UI)以及使用者體驗(UE)，這兩者不是其他公司一昧的模仿就能夠模仿出一套精神的，必須要模仿之後還要加上自己的研究跟想法才真的可以做出完美的東西。已經一個東西擺在前面給你抄了，你卻還抄得十分鱉腳的話，那真的被人家罵抄襲也是活該了 …</p>

<p>所以，我開始思考自己做的東西到底哪邊還能再修改，而觀察的對象就是Mac的設計，不論是硬體還是軟體還是整個操作流程，我發現我越思考越觀察就越覺得過去玩到的東西都真的太不貼近人性，所以我也就越來越排斥那些我曾經接觸過的東西。我再說一次，不是那些東西不好，而是那些東西太過自以為是，自以為使用者什麼都想要自己手動設定，把全世界的使用者都當成工程師那樣，把選項做得十分複雜、把警告訊息弄得十分嚴重、把操作介面用得十分雜亂，到頭來大家都只知道電腦要根據所謂「固定的步驟」去使用，而完全忘記電腦應該要「直覺」的去使用才對。</p>

<p>我在Mac上看到了這種直覺。Safari是Mac上的預設瀏覽器，它的核心是Webkit，這個東西很有趣的一個重點在於它的上傳檔案方式。我們都知道，在IE、Firefox裡面上傳檔案必須要按下「瀏覽」按鈕，然後在一層一層資料夾中找出你要的檔案之後選擇，這樣才算完全的選擇檔案。但Safari(包含Google Chrome)並不是這樣而已，你可以直接把檔案「拖」到那個「瀏覽」按鈕上面後放開，這樣就能夠瞬間選擇你要的檔案，你沒辦法打開你的檔案總管後把檔案拖到IE或Firefox的瀏覽按鈕上，你必須自己慢慢找出來，如果今天它只放在桌面那就只是小事，如果它放在十幾二十層的目錄裡面時，你會哭死。</p>

<p>另外一個直覺的舉例也同樣拿這個檔案上傳當例子，剛剛我們提到按下瀏覽的時候會出現選擇檔案的視窗，在Windows底下是可以把檔案拖進去的，如此一來Windows會很「自作聰明」的把檔案<strong>移動</strong>到那個目錄底下，然後選擇；但是在Mac底下卻完全不是這麼一回事！Mac會知道你拖進去的檔案到底在哪裡，然後自動切換到那個目錄並且選擇該檔案。我的天，這種小功能是多麼的貼心啊？你完全不需要擔心它會被<strong>移動</strong>到哪裡去，能夠快速簡單的指定檔案的所在位置，這個就是最基本的「直覺操作」啊！</p>

<p>網路上有許多這類的例子，像是國外的麥當勞有提供免費的無線上網(Wi-Fi)，所以他們印出了一份教學的DM，有人發現到Windows需要這樣做：<code>開始 =&gt; 控制台 =&gt; 網路 =&gt; 無線網路</code> … 對不起，我不想打下去了</p>

<p>然而Mac只有三個步驟： <code>點選電腦右上角的無線圖示 =&gt; 選擇麥當勞的網路 =&gt; 開心上網</code>，這讓我想起這個廣告 <a href="http://www.youtube.com/watch?v=6uXJlX50Lj8">http://www.youtube.com/watch?v=6uXJlX50Lj8</a></p>

<p>所以為什麼我用Mac？因為我越來越想知道我還能夠替使用者處理掉多少使用者不需要真的去關心的事情，就從Mac的身上學習。2011年中，我買了一台Macbook Air，它沒有光碟機、它輕巧、它沒有太多我不需要的插孔(左邊插槽分別是電源、USB跟耳麥孔、右邊則是影像輸出、USB跟SD卡槽)，我外出只需要帶一個電源線就夠了，頂多多一個SD卡，真的很方便。</p>

<p>Macbook的電源變壓器上也有貼心的點，它能夠張開兩邊的東西用來當做捲線器，而且插頭的部份可以拔掉換成延長線或者是其他國家的接口，這些都是我很少有機會看到的設計(有啦，我記得最近某些公司抄很大 ….)。這是蘋果用心的地方，他們或許做的不是很完美，但是卻也很盡心盡力的在完善自己的產品。</p>

<p>Mac OS X在Leopard之後也內建了Ruby，甚至直接包了一個RubyCocoa.framework可以用(但這部份我沒有研究)。有很多好用的工具也都是在Mac上面有，像是Textmate(不過我最近愛上Sublime Text 2，這個則是Windows、Linux都有)，對於一個網站開發者、網頁設計師而言，真的可以從中學到很多設計的技巧、用到很多很不錯的設計工具。</p>

<p>為什麼我用Mac？因為近朱者赤近墨者黑，要不然孟母也不用三遷了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012年的目標]]></title>
    <link href="http://hechien.github.com/octopress/blog/2012nian-de-mu-biao/"/>
    <updated>2012-05-12T11:42:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/2012nian-de-mu-biao</id>
    <content type="html"><![CDATA[<p>希望自己在2012年可以做好這些事情</p>

<p>討論內容在：<a href="https://www.facebook.com/hechien/posts/431153790229954">https://www.facebook.com/hechien/posts/431153790229954</a></p>

<h2>一定要做的事</h2>

<ol>
<li>每天固定抄寫幾檔的最高、最低、開盤、收盤、昨收、交易量</li>
<li>三年級下學期搞定專題 (不含 UI/UE)</li>
<li>暑假把專題的UI/UE調好</li>
<li>耶誕節前解決專題並且正式開始測試</li>
<li>想好除資訊業外其他可以發展的領域</li>
<li>撰寫好一本網頁設計的書</li>
<li>撰寫好一本Ruby on Rails的書</li>
<li>把<code>CoffeeScript</code>、<code>SCSS</code>、<code>Compass</code>、<code>Middleman</code>與CSS Frameworks練熟</li>
<li>六月開始至少每個月三部Mac教學影片、一部Mac Podcast教學、一篇Mac教學文章</li>
<li>至少今年辦兩場Mac聚會 (大小不拘)</li>
</ol>


<h2>逼自己去嘗試</h2>

<ol>
<li>每天誦三次心經</li>
<li>每天讀ㄧ篇道德經</li>
<li>每天一篇Rework的內容</li>
<li>每個禮拜一篇以上與工作或技術無關的文章</li>
<li>重新學好奇門遁甲與易經</li>
</ol>


<p>希望自己能夠好好的實踐這些事情。
今天是2012/05/12，加油。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Image Magick Resize 語法]]></title>
    <link href="http://hechien.github.com/octopress/blog/image-magick-resize-yu-fa/"/>
    <updated>2012-05-10T11:36:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/image-magick-resize-yu-fa</id>
    <content type="html"><![CDATA[<p>因為現在透過Paperclip這邊有一點小問題，所以先做一下小記錄</p>

<!-- more -->


<p>底下這個部分我再找時間整理成表格</p>

<h2>語法 |  說明</h2>

<p>scale%  | Height and width both scaled by specified percentage.
scale-x%xscale-y% | Height and width individually scaled by specified percentages. (Only one % symbol needed.)
width | Width given, height automagically selected to preserve aspect ratio.
xheight | Height given, width automagically selected to preserve aspect ratio.
widthxheight |  Maximum values of height and width given, aspect ratio preserved.
widthxheight^ | Minimum values of width and height given, aspect ratio preserved.
widthxheight! | Width and height emphatically given, original aspect ratio ignored.
widthxheight> | Shrinks images with dimension(s) larger than the corresponding width and/or height dimension(s).
widthxheight&lt; | Enlarges images with dimension(s) smaller than the corresponding width and/or height dimension(s).
area@ | Resize image to have specified area in pixels. Aspect ratio is preserved.</p>

<p>大致上就是這樣吧。</p>

<p><a href="http://www.imagemagick.org/script/command-line-processing.php?ImageMagick=q63ko1qv7bq52429iuqfdgp4v2#geometry">參考網址</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OmniAuth + Devise + OpenID]]></title>
    <link href="http://hechien.github.com/octopress/blog/omniauth-plus-devise-plus-openid/"/>
    <updated>2012-05-08T11:46:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/omniauth-plus-devise-plus-openid</id>
    <content type="html"><![CDATA[<p>最近內部討論結果覺得有可能需要Support Open ID的登入機制，因此就去survey了一下Devise擴展Open ID的方式。因為Devise本身支援OmniAuth，所以就直接以<code>Devise OmniAuth OpenID</code>的方式搜尋了一下，便找到這篇：<a href="http://blog.xdite.net/posts/2011/12/05/omniauth-clean-auth-provider-4/">http://blog.xdite.net/posts/2011/12/05/omniauth-clean-auth-provider-4/</a></p>

<p>其實這篇照做就可以了，只不過因為原始碼是從<a href="http://ruby-taiwan.org">http://ruby-taiwan.org</a>那邊來的，所以有一些code是不能用的 &#8230; 需要自己稍微做調整一下</p>

<p>這個實作版本是Rails 3.2.3、Devise 2.0.4、OmniAuth 1.0.3</p>

<p>裡面的Code在<code>omniauth_callbacks.rb</code>中第9行左右有個問題，User必須要用includes把authorizations給引入進來，不然會噴 &#8230; XD</p>

<p>可能是因為原本的Code用MongoID當做Data source的關係，所以原本的Code內並沒有寫includes這一塊吧 &#8230;</p>

<p>然後要記得在<code>user.rb</code>實作<code>bind_service</code>，不然原本的code去bind使用者的部份會有問題 &#8230;</p>

<p>要把<code>omniauth_callbacks.rb</code>放在<code>app/models/user</code>底下、把<code>omniauth_callbacks_controller.rb</code>放在<code>app/controllers/users</code>底下，總之在model的資料夾是<code>user</code>而controller的資料夾是<code>users</code>就對了。</p>

<p>大致上就這樣。</p>

<p>喔對，很重要的一點就是 &#8230; 現在網路上很多範例都會叫你去<code>config/initializers/omniauth.rb</code>內設定provider，這樣做的話一定會噴掉 &#8230; 我在這邊花很多時間才搞定囧，請記住，<strong>不必</strong>寫在這個地方！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL啟動、執行出現errno 13的問題]]></title>
    <link href="http://hechien.github.com/octopress/blog/mysqlqi-dong-%2C-zhi-xing-chu-xian-errno-13de-wen-ti/"/>
    <updated>2012-05-05T16:16:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/mysqlqi-dong-,-zhi-xing-chu-xian-errno-13de-wen-ti</id>
    <content type="html"><![CDATA[<p>剛剛朋友的MySQL Server忽然掛掉，沒辦法正常匯入 &#8230; 查了log後看到以下訊息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>120505 12:08:27 mysqld_safe Starting mysqld daemon with databases from /var/lib/mysql
</span><span class='line'>120505 12:08:27  InnoDB: Initializing buffer pool, size = 8.0M
</span><span class='line'>120505 12:08:27  InnoDB: Completed initialization of buffer pool
</span><span class='line'>120505 12:08:27  InnoDB: Operating system error number 13 in a file operation.
</span><span class='line'>InnoDB: The error means mysqld does not have the access rights to
</span><span class='line'>InnoDB: the directory.
</span><span class='line'>InnoDB: File name ./ibdata1
</span><span class='line'>InnoDB: File operation call: 'open'.
</span><span class='line'>InnoDB: Cannot continue operation.
</span><span class='line'>120505 12:08:27 mysqld_safe mysqld from pid file /var/run/mysqld/mysqld.pid ended</span></code></pre></td></tr></table></div></figure>


<p>科科，炸了=_=</p>

<p>上網找了一下看到這篇<a href="http://stackoverflow.com/questions/3907666/mysql-wont-start-ibdata1-corrupt-operating-system-error-number-13-permis">Mysql won&#8217;t start - ibdata1 corrupt? - operating system error number 13 - permissions issue</a></p>

<p>讚，頭彩 &#8230; 馬上讀一下發現到這個指令： <code>perror 13</code>，輸入之後告訴我 Error code 13代表的是Permission denied，就覺得很奇怪 &#8230;</p>

<p>跳到 <code>/var/lib/mysql</code> (MySQL根目錄，資料檔都放在這底下) 後，下 <code>ls -l</code>發現某些檔案的權限亂掉 &#8230; 所以用 <code>chown -R mysql *</code>來修復權限，至少把owner改為<code>mysql</code>就可以了。</p>

<p>結束之後重新啟動，果然正常 &#8230; 開開心心匯入資料去</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我沒有天份，只有努力]]></title>
    <link href="http://hechien.github.com/octopress/blog/wo-mei-you-tian-fen-%2Czhi-you-nu-li/"/>
    <updated>2012-05-02T23:16:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/wo-mei-you-tian-fen-,zhi-you-nu-li</id>
    <content type="html"><![CDATA[<p>我對於規劃這種事情實在是不太在行</p>

<p>我也很會去評估自身能力，決定到底該不該做一些事情</p>

<p>但往往都會因為低估而退卻、高估而失敗</p>

<p>所以我對於估計這種事情也是不太在行</p>

<p>但我只知道一件事，那就是「現在不行，努力過後，以後可以」</p>

<p>我今天早上看到Mr. Jamie寫的文章，標題很有趣，就叫做「<a href="http://mrjamie.cc/2012/04/20/talent/">天份是什麼，能吃嗎？</a>」</p>

<p>我非常認同這篇文章，因為我自己就是過來人，但也有些許不認同這些文章 &#8230; 因為我也看過一句話：「成功是九十九分的努力，加上一分的天份；大家都在闡述那九十九分的努力有多重要，但卻忘記那一分的天份才是關鍵」。</p>

<p>每個人都有天份，但天份不能拿來當做任何事情的藉口 &#8230;</p>

<p>我曾經被某人嗆過，我有天份，但不要太囂張</p>

<p>何其無辜，我花了十年的時間學會的東西，被人家認為是有天份，真是可笑 &#8230;</p>

<p>記住，每個人都有天份，但關鍵點是在於努力</p>

<p>不是說每個人努力就能成功，但努力過後，你可以更接近機會，而只有機會才會帶領你邁向成功。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SCSS小技巧：更結構化的寫margin、padding、font..etc]]></title>
    <link href="http://hechien.github.com/octopress/blog/scssxiao-ji-qiao-%3Ageng-jie-gou-hua-de-xie-margin%2C-padding%2C-font-dot-etc/"/>
    <updated>2012-05-02T17:08:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/scssxiao-ji-qiao-:geng-jie-gou-hua-de-xie-margin,-padding,-font-dot-etc</id>
    <content type="html"><![CDATA[<p>之前忘記在哪邊看到一篇文章，裡面寫了一個SCSS(SASS)的小技巧，可是我當時沒有辦法把文章给加到閱讀列表中，只好憑印象來測，最後終於測出來了。</p>

<p>我們常常可能寫以下的CSS code</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">margin-top</span><span class="o">:</span> <span class="nt">30px</span><span class="o">;</span>
</span><span class='line'><span class="nt">margin-right</span><span class="o">:</span> <span class="nt">10px</span><span class="o">;</span>
</span><span class='line'><span class="nt">font-size</span><span class="o">:</span> <span class="nt">24pt</span><span class="o">;</span>
</span><span class='line'><span class="nt">font-family</span><span class="o">:</span> <span class="nt">Arial</span><span class="o">;</span>
</span><span class='line'><span class="nt">padding-top</span><span class="o">:</span> <span class="nt">20px</span><span class="o">;</span>
</span><span class='line'><span class="nt">padding-right</span><span class="o">:</span> <span class="nt">15px</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但其實這樣寫挺雜亂的，有了SCSS我們就應該要放下屠刀立地成佛啊！(誤</p>

<p>請改成以下寫法(與上面做比對)：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="na">margin</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="na">top</span><span class="o">:</span> <span class="mi">30</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>  <span class="na">right</span><span class="o">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="na">font</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="na">size</span><span class="o">:</span> <span class="mi">24</span><span class="kt">pt</span><span class="p">;</span>
</span><span class='line'>  <span class="na">family</span><span class="o">:</span> <span class="n">Arial</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="na">padding</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="na">top</span><span class="o">:</span> <span class="mi">20</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>  <span class="na">right</span><span class="o">:</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>怎麼樣？是不是很簡潔整齊呢？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用CoffeeScript實作Array#list]]></title>
    <link href="http://hechien.github.com/octopress/blog/yong-coffeescriptshi-zuo-array-number-list/"/>
    <updated>2012-04-27T15:21:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/yong-coffeescriptshi-zuo-array-number-list</id>
    <content type="html"><![CDATA[<p>在寫專案的過程當中想要操作Array，可是在JavaScript中沒有<code>[1, 2, 3].last()</code>這種東西可以用，只好自己擴充啦～</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nb">Array</span><span class="o">::</span><span class="nv">last = </span><span class="o">-&gt;</span>
</span><span class='line'>  <span class="err">@</span><span class="p">[</span><span class="err">@</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣就會回傳</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">last</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後網路上的高見龍前輩在Slideshare的投影片 <a href="http://www.slideshare.net/aquarianboy/coffeescriptrubytuesday">http://www.slideshare.net/aquarianboy/coffeescriptrubytuesday</a> 中第160頁也有一些針對字串的擴充：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nb">String</span><span class="o">::</span><span class="nv">repeat = </span><span class="nf">(n) -&gt;</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">).</span><span class="nx">join</span> <span class="err">@</span>
</span><span class='line'><span class="nb">String</span><span class="o">::</span><span class="nv">downcase = </span><span class="o">-&gt;</span> <span class="nx">@toLowerCase</span><span class="p">()</span>
</span><span class='line'><span class="nb">String</span><span class="o">::</span><span class="nv">upcase = </span><span class="o">-&gt;</span> <span class="nx">@toUpperCase</span><span class="p">()</span>
</span><span class='line'><span class="nb">String</span><span class="o">::</span><span class="nv">find = </span><span class="nf">(str) -&gt;</span> <span class="nx">@indexOf</span> <span class="nx">str</span>
</span><span class='line'><span class="nb">String</span><span class="o">::</span><span class="nv">has = </span><span class="nf">(str) -&gt;</span> <span class="p">(</span><span class="nx">@indexOf</span> <span class="nx">str</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>其實蠻炫的XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppleScript for Numbers example]]></title>
    <link href="http://hechien.github.com/octopress/blog/applescript-for-numbers-example/"/>
    <updated>2012-04-25T11:12:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/applescript-for-numbers-example</id>
    <content type="html"><![CDATA[<p>剛好想到Excel等Office的套裝軟體都有VBA可以用，那Mac上的iWork呢？</p>

<p>嗯 &#8230; 是的，就是超威的AppleScript來處理啦～</p>

<p>底下是找到的Example:</p>

<div><script src='https://gist.github.com/2485918.js?file='></script>
<noscript><pre><code>-- Source: https://discussions.apple.com/thread/1857867?start=0&amp;tstart=0

tell application &quot;Numbers&quot;
  activate
  tell document 1
    tell sheet 1
      set newtable to make new table with properties {name:&quot;Test Table 2&quot;}
      tell newtable
        set value of cell 3 of row 2 to count of rows
        set background color of cell 3 of row 2 to {0, 65535, 0} as RGB color
        remove row 1
        set myRange to range &quot;B1:C2&quot;
        
        repeat with i from 1 to count of rows
          set value of cell i of column 3 to i * 3
        end repeat
        
        set selection range to range &quot;a1:c3&quot;
      end tell
    end tell
  end tell
end tell</code></pre></noscript></div>


<p>其實真的蠻屌的 &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加上了Disqus留言系統囉]]></title>
    <link href="http://hechien.github.com/octopress/blog/jia-shang-liao-disqusliu-yan-xi-tong-luo/"/>
    <updated>2012-04-24T11:56:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/jia-shang-liao-disqusliu-yan-xi-tong-luo</id>
    <content type="html"><![CDATA[<p>根據這篇<a href="http://whiteball.tw/blog/before-you-deploy-octopress/">在 Octopress 佈署出去前要注意的小地方</a>中所提到的幾點我有一一在調整，除了404還沒弄好跟導覽列的部份以外其他都加上去了。</p>

<p>所以現在我的RSS URL是Feedburner提供的、網址也不會有日期、Disqus也掛上了(而且好簡單喔！)、清單項目的縮排也弄好了 &#8230; octopress真的超好用的>///&lt;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM與cron]]></title>
    <link href="http://hechien.github.com/octopress/blog/rvmyu-cron/"/>
    <updated>2012-04-24T11:40:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/rvmyu-cron</id>
    <content type="html"><![CDATA[<p>今天發生了一件事情，crontab設定的task不能正常的跑Ruby script，檢查一下原以為是Path的問題，不管怎樣設定Path都會沒辦法正常的load rubygems，後來找了一下後發現原來官方就有<a href="http://beginrescueend.com/integration/cron/">教學</a>了 &#8230;</p>

<p>總之，把cron內加上rvm ruby的路徑就可以了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Load Path設定]]></title>
    <link href="http://hechien.github.com/octopress/blog/ruby-load-pathshe-ding/"/>
    <updated>2012-04-24T11:33:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/ruby-load-pathshe-ding</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1">#encoding: utf-8</span>
</span><span class='line'><span class="vg">$LOAD_PATH</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;.&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;kdan_mobile&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.js寫TCP Socket Server]]></title>
    <link href="http://hechien.github.com/octopress/blog/node-dot-jsxie-tcp-socket-server/"/>
    <updated>2012-04-24T09:40:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/node-dot-jsxie-tcp-socket-server</id>
    <content type="html"><![CDATA[<p>最近正苦惱著要怎樣加快API的回應速度，後來把腦筋動到一般的Socket上，打算直接寫個Socket Server負責回應API Request &#8230; 我看人家<a href="http://www.inside.com.tw/2012/01/10/group-chatting">Whatsapp用Erlang搞定兩百二十萬條的連線數</a>，但是我不會寫Erlang啊！</p>

<p>所以只好先把腦筋動到node.js上面，然後稍微Google了一下後便寫出了底下的東西 &#8230;</p>

<!-- more -->


<p>https://gist.github.com/2470084</p>

<p>參考資料都在裡面，真的感覺node.js很棒啊 &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails打索引技巧]]></title>
    <link href="http://hechien.github.com/octopress/blog/railsda-suo-yin-ji-qiao/"/>
    <updated>2012-04-24T09:36:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/railsda-suo-yin-ji-qiao</id>
    <content type="html"><![CDATA[<p>做專案學到的一個技巧 &#8230; 應該說，是很慘痛的學到一個技巧=_= &#8230;</p>

<p>我們都知道，Rails可以透過<code>rails g migration blahblah</code>來產生Migration file然後在裡面寫<code>add_index</code>來打索引，可是切記切記！！不要把索引寫在同一個表內 &#8230; 當資料量大，而且其中一個index打失敗你就會哭了 &#8230;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Mysql2::Error: Specified key was too long; max key length is 1000 bytes: CREATE  INDEX `index_products_on_url_identify_and_name` ON `products` (`url_identify`, `name`)</span></code></pre></td></tr></table></div></figure>


<p>慘痛T_T</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Middleman + Pow + Livereload + HAML]]></title>
    <link href="http://hechien.github.com/octopress/blog/middleman-plus-pow-plus-livereload-plus-haml/"/>
    <updated>2012-04-12T15:14:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/middleman-plus-pow-plus-livereload-plus-haml</id>
    <content type="html"><![CDATA[<p>原本今天要教同事怎樣寫HAML &amp; SCSS的，後來覺得HAML還要自己手動轉實在太麻煩，所以就講Middleman + guard-livereload了。</p>

<!-- more -->


<p>首先要先安裝middleman：<code>gem i middleman</code></p>

<p>安裝好之後建立Project：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mkdir ~/Documents/playgroud/middleman
</span><span class='line'><span class="nb">cd</span> ~/Documents/playground/middleman
</span><span class='line'>middleman init . --bundler --rack
</span></code></pre></td></tr></table></div></figure>


<p>在Gemfile中加入：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;guard-livereload&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>執行<code>bundle install</code>後，透過<code>bundle exec guard init livereload</code>產生Guardfile，然後修改Guardfile</p>

<figure class='code'><figcaption><span>Guardfile </span><a href='https://gist.github.com/1221542'>link</a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># More info at https://github.com/guard/guard#readme</span>
</span><span class='line'><span class="c1"># XDite&#39;s guardflie: https://gist.github.com/1221542</span>
</span><span class='line'>
</span><span class='line'><span class="n">guard</span> <span class="s1">&#39;livereload&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{source/.+\.(erb|haml|md)}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{source/helpers/.+\.rb}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{(public/|source/assets).+\.(css|js|html)}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{(source/.+\.css)\.s[ac]ss}</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="n">m</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{(source/.+\.js)\.coffee}</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="n">m</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{config/locales/.+\.yml}</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改好後存檔離開，執行 <code>bundle exec guard</code></p>

<p>安裝powder： <code>gem i powder</code></p>

<p>如果沒有安裝pow的話就：<code>powder install</code></p>

<p>然後建立好Link：<code>powder link</code>，這樣應該會建立<code>http://middleman.dev</code>的網址給你使用</p>

<p>安裝瀏覽器外掛(Chrome)： <a href="https://chrome.google.com/webstore/detail/jnihajbhpnppcggbcgedagnkighmdlei">https://chrome.google.com/webstore/detail/jnihajbhpnppcggbcgedagnkighmdlei</a></p>

<p>一切就緒後，瀏覽器上應該會出現一個 LR 的圖示，按下去吧 &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[被Media Queries婊了一下]]></title>
    <link href="http://hechien.github.com/octopress/blog/bei-media-queriesbiao-liao-%5B%3F%5D-xia/"/>
    <updated>2012-04-05T18:28:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/bei-media-queriesbiao-liao-[?]-xia</id>
    <content type="html"><![CDATA[<p>清明前一天，行銷同事告訴我某專案網站無法用IE 8開啟，到清明後一天才開始修正。一開始，找了老半天就是找不到任何錯誤，想說會不會是HTML 5的不支援問題導致的，可是開其他專案網站卻又都正常，後來發現到CSS中有用到Media Queries的部分，所以我拿掉之後IE 8就可以用了！</p>

<p>特此記錄一下T<sup>T&#8221;</sup></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paperclip的default_url style]]></title>
    <link href="http://hechien.github.com/octopress/blog/paperclipde-default-url-style/"/>
    <updated>2012-03-29T15:59:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/paperclipde-default-url-style</id>
    <content type="html"><![CDATA[<p>用Paperclip的話一定會有用到特定尺寸的，可是當特定尺寸沒有上傳圖片的話要顯示特定尺寸的預設圖片該怎麼搞？</p>

<p>嗯，我現在有三種尺寸：<code>large, medium, thumb</code>，但我只要在<code>default_url</code>設定時加上<code>:style</code>就好，例如：</p>

<p><code>has_attached_file :image, {styles: {large: "", medium: "", thumb: ""}, default_url: "/path/to/missing/image/missing_:style.jpg"}</code></p>

<p>如此一來，如果<code>medium</code>沒有東西的話，它會自動帶出<code>missing_medium.jpg</code>來。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx Tunning]]></title>
    <link href="http://hechien.github.com/octopress/blog/nginx-tunning/"/>
    <updated>2012-03-28T15:32:00+08:00</updated>
    <id>http://hechien.github.com/octopress/blog/nginx-tunning</id>
    <content type="html"><![CDATA[<p>準備讓公司的系統上線了，在調整Nginx的效能 &#8230;</p>

<p>參考這篇 <a href="http://v1nc3ntlaw.github.com/rubyconf-tw-2011-rails-sa/#13">http://v1nc3ntlaw.github.com/rubyconf-tw-2011-rails-sa/#13</a> 然後看了一下，看到<code>worker_processes 16;</code>感覺好像太高，畢竟我們公司的Server才1G RAM &#8230; 怕直接死掉XD</p>

<p>不過<code>nofile</code>的值我是設定<code>32768</code>，然後根據這篇 <a href="http://www.cnblogs.com/skyaspnet/archive/2010/09/02/1815749.html">http://www.cnblogs.com/skyaspnet/archive/2010/09/02/1815749.html</a> 設定了 <code>fs.file-max</code> 的值到<code>2390251</code></p>

<p><code>worker_connections</code>的部份則是參考這篇 <a href="http://hi.baidu.com/ugo5/blog/item/f4fb6037322059aed1a2d31b.html">http://hi.baidu.com/ugo5/blog/item/f4fb6037322059aed1a2d31b.html</a></p>

<p>不過若是可以，這篇也要參考一下 <a href="http://sudone.com/nginx/nginx_worker_processes.html">http://sudone.com/nginx/nginx_worker_processes.html</a></p>

<p>最大連接數的計算公式是：<code>worker_processes * worker_connections / 4</code>，而worker_connections最好超過9000的話，我是直接上到10240，所以我的設定檔大概長這樣：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>worker_processes 8;
</span><span class='line'>worker_rlimit_nofile 32768;
</span><span class='line'>
</span><span class='line'>events {
</span><span class='line'>  worker_connections 10240;
</span><span class='line'>  use epoll;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>上網查了一下，<code>epoll</code>似乎是Linux 2.6核心加入的功能，效能似乎不錯便加上去了。</p>
]]></content>
  </entry>
  
</feed>
